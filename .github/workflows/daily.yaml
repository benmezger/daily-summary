name: Create daily summary
on:
  workflow_dispatch:
  schedule:
    # 23:00 UTC = 00:00 CET (Winter) / 01:00 CEST (Summer)
    - cron: "0 23 * * *"

jobs:
  create-summary:
    runs-on: ubuntu-latest
    permissions: write-all
    concurrency:
      group: daily
      cancel-in-progress: true
    env:
      SUMMARY_REPOSITORY: "benmezger/summaries"
      SUMMARY_ASSIGNEE: "benmezger"
      TIMEZONE: "Europe/Amsterdam"
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: ".python-version"

      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.6.4"
          enable-cache: true

      - name: Install project dependencies
        if: steps.setup-uv.outputs.cache-hit != 'true'
        run: uv sync

      - name: Set timezone
        run: sudo timedatectl set-timezone "$TIMEZONE"

      - name: Install GH milestones extension
        run: gh extension install valeriobelli/gh-milestone
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate daily summary
        id: summary
        run: |
          FILENAME="daily.md"
          uv run task cli --file $FILENAME daily-summary --yesterday --escape --no-ollama

          if [ -f $FILENAME ]; then
            while IFS= read -r line || [[ -n "$line" ]]; do
              if [[ -n "$line" ]]; then
                echo "::add-mask::$line"
              fi
            done < $FILENAME

            {
              echo "text<<EOF"
              cat $FILENAME
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "text<<EOF"
              echo ""
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set current year
        run:
          echo "CURRENT_YEAR=$(date '+%Y')" >> $GITHUB_ENV

      - name: Maybe create milestone
        run: |
          milestones=$(gh milestone list --repo $SUMMARY_REPOSITORY)

          if ! echo "$milestones" | grep -q "$CURRENT_YEAR"; then
            echo "Milestone for $CURRENT_YEAR not found. Creating."
            gh milestone create \
               --title "$CURRENT_YEAR" \
               --description "$CURRENT_YEAR contributions" \
               --due-date $(date -d "$((CURRENT_YEAR+1))-01-01 -1 second" +"%F")  \
               --repo "$SUMMARY_REPOSITORY"
          else
            echo "Milestone for $CURRENT_YEAR already exists. Skipping"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Maybe post issue and lock
        if: ${{ steps.summary.outputs.text }}
        run: |
          ISSUE_URL=$(gh issue --repo "$SUMMARY_REPOSITORY" create \
            --title "Daily Summary of $(date -d 'yesterday' '+%Y-%m-%d')" \
            --body "${{ steps.summary.outputs.text }}" \
            --assignee "$SUMMARY_ASSIGNEE" \
            --milestone "$CURRENT_YEAR" \
            --label summary | grep -o 'https://github.com[^ ]*')

          gh issue lock "$ISSUE_URL"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Maybe post issue without a summary
        if: ${{ steps.summary.outputs.text == '' }}
        run: |
          ISSUE_URL=$(gh issue --repo "$SUMMARY_REPOSITORY" create \
            --title "No summary available for $(date -d 'yesterday' '+%Y-%m-%d')" \
            --body "No summary available." \
            --assignee "$SUMMARY_ASSIGNEE" \
            --milestone "$CURRENT_YEAR" \
            --label no-summary | grep -o 'https://github.com[^ ]*')

          gh issue lock "$ISSUE_URL"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
